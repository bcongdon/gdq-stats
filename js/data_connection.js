"use strict";const GDQ_API_ENDPOINT="https://api.gdqstat.us";const GDQ_STORAGE_ENDPOINT="http://storage.api.gdqstat.us";var DBConnection={timeseries:undefined,schedule:undefined,timeseriesListeners:[],scheduleListeners:[],fetchInitial:function(){return new Promise(function(b,a){getRetry(GDQ_STORAGE_ENDPOINT+"/latest.json",function(c){DBConnection.updateWithNewData(JSON.parse(c));DBConnection.fetchRecent().then(function(){b()})})})},fetchRecent:function(){return new Promise(function(d,b){var c=GDQ_API_ENDPOINT+"/recentEvents";var a=DBConnection.mostRecentTime();if(a){c+="?since="+a.toISOString()}getRetry(c,function(e){DBConnection.updateWithNewData(e);d(DBConnection.timeseries)})})},updateWithNewData:function(c){for(var a=0;a<c.length;a++){c[a].time=new Date(c[a].time)}c.sort(function(e,d){return e.time-d.time});if(!DBConnection.timeseries||DBConnection.timeseries.length==0){DBConnection.timeseries=c}else{var b=DBConnection.mostRecentTime();c=c.filter(function(e){return e.time>b});DBConnection.timeseries=DBConnection.timeseries.concat(c)}DBConnection.callTimeseriesListeners()},mostRecentTime:function(){if(!DBConnection.timeseries){return 0}return DBConnection.timeseries[DBConnection.timeseries.length-1].time},refreshTimeseries:function(){return new Promise(function(b,a){DBConnection.fetchRecent().then(function(){b(DBConnection.timeseries)})})},refreshSchedule:function(){return new Promise(function(c,a){var b=GDQ_STORAGE_ENDPOINT+"/schedule.json";getRetry(b,function(d){DBConnection.schedule=JSON.parse(d);DBConnection.callScheduleListeners();c(DBConnection.schedule)})})},callTimeseriesListeners:function(){for(var a=0;a<DBConnection.timeseriesListeners.length;a++){DBConnection.timeseriesListeners[a](DBConnection.timeseries)}},callScheduleListeners:function(){for(var a=0;a<DBConnection.scheduleListeners.length;a++){DBConnection.scheduleListeners[a](DBConnection.schedule)}},getTimeseries:function(){return new Promise(function(b,a){if(DBConnection.timeseries){b(DBConnection.timeseries)}else{DBConnection.fetchInitial().then(function(){b(DBConnection.timeseries)})}})},getSchedule:function(){return new Promise(function(b,a){if(DBConnection.schedule){b(DBConnection.schedule)}else{DBConnection.refreshSchedule().then(function(){b(DBConnection.schedule)})}})}};DBConnection.fetchInitial();DBConnection.refreshSchedule();setInterval(function(){DBConnection.refreshTimeseries()},60*1000);setInterval(function(){DBConnection.refreshSchedule()},5*60*1000);